UniSIMD assembler is a high-level C/C++ macro assembler framework unified across
ARM, MIPS, Power and x86 architectures. It establishes a subset of both BASE and
SIMD instruction sets with clearly defined common API, so that application logic
can be written and maintained in one place without code replication.
The assembler itself isn't a separate tool, but rather a collection of C/C++
header files, which applications need to include directly in order to use.

At present, Intel SSE/SSE2/SSE4 and 256-bit AVX/AVX2 (32/64-bit x86 ISAs),
ARMv7 NEON/NEONv2, ARMv8:AArch32 NEON and AArch64 NEON (32/64-bit ARM ISAs),
MIPS 32/64-bit r5/r6 MSA and Power 32/64-bit VMX/VSX (little/big-endian ISAs)
are mostly implemented, although wider SIMD, 64-bit floating point along with
more available registers and other architectures can be supported by design.
Experimental 64/32-bit hybrid mode (compatible with native 64-bit ABI) is also
available on four major architectures for the original pure 32-bit ISA.

The project comes with a test framework, which can be compiled in Linux/GCC,
Maemo/scratchbox (N900 version) as well as Windows/VC++ 6.0 or later.
Instructions for resolving dependencies and building the binaries
for supported platforms can be found in the accompanying INSTALL file.
